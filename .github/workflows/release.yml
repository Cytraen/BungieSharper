name: Create release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      dotnet_sdk_version: '3.1.301'
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      TEST_BUNGIE_API_KEY: ${{ secrets.TEST_BUNGIE_API_KEY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet_sdk_version }}

    - name: Build generator
      run: dotnet build BungieSharper.Generator --configuration Release

    - name: Get version number
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
      shell: bash

    - name: Run generator
      run: dotnet run --project BungieSharper.Generator --no-restore --verbosity normal

    - name: Build client
      run: dotnet build BungieSharper --configuration Release -p:Version=${{ steps.get_version.outputs.VERSION }}

    - name: Pack client NuGet package
      run: dotnet pack BungieSharper/BungieSharper.csproj --configuration Release --output Packages -p:ContinuousIntegrationBuild=true -p:Version=${{ steps.get_version.outputs.VERSION }}
      shell: bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: v${{ steps.get_version.outputs.VERSION }}
        draft: true
        prerelease: false

    - name: get base directory
      run: |
        echo ls
      shell: bash

    - name: Upload .nupkg
      id: upload-nupkg-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: BungieSharper/BungieSharper/Packages/BungieSharper.${{ steps.get_version.outputs.VERSION }}.nupkg
        asset_name: BungieSharper.${{ steps.get_version.outputs.VERSION }}.nupkg
        asset_content_type: application/zip

    - name: Upload .snupkg
      id: upload-snupkg-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: BungieSharper/BungieSharper/Packages/BungieSharper.${{ steps.get_version.outputs.VERSION }}.snupkg
        asset_name: BungieSharper.${{ steps.get_version.outputs.VERSION }}.snupkg
        asset_content_type: application/zip